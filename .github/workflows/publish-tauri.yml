name: 'Build and release tauri'

on:
  workflow_dispatch:
  push:
    branches:
      - main
    # tags:
      # - 'v*' # Should match `version` in ./src-tauri/tauri.conf.json

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: ['--target aarch64-apple-darwin', '--target x86_64-apple-darwin']
          - platform: 'ubuntu-latest'
            android: yes
          - platform: 'windows-latest'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        run: pnpm install

      - name: Setup java
        uses: actions/setup-java@v3
        if: ${{ matrix.android }}
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup NDK 
        uses: nttld/setup-ndk@v1
        if: ${{ matrix.android }}
        id: setup-ndk
        with:
          ndk-version: r25b
          local-cache: true

      - name: Build Android
        if: matrix.platform == 'ubuntu-latest'
        run: |
         rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android
          cargo install tauri-cli --version "^2.0.0" --locked
          cargo tauri android build --split-per-abi --apk
          cargo tauri build
        env:
          NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Get app version
        run: echo "APP_VERSION=$(jq -r .version src-tauri/tauri.conf.json)" >> $GITHUB_ENV

      - name: Upload deb bundle
        uses: actions/upload-artifact@v4
        with:
          name: Debian Bundle
          path: ${{ github.workspace }}/src-tauri/target/release/bundle/deb/appname_${{ env.APP_VERSION }}_amd64.deb

      - name: Upload rpm bundle
        uses: actions/upload-artifact@v4
        with:
          name: RPM Bundle
          path: ${{ github.workspace }}/src-tauri/target/release/bundle/rpm/appname-${{ env.APP_VERSION }}-1.x86_64.rpm

      - name: Upload appimage bundle
        uses: actions/upload-artifact@v4
        with:
          name: AppImage Bundle
          path: ${{ github.workspace }}/src-tauri/target/release/bundle/appimage/Roomy\ Chat_${{ env.APP_VERSION }}_amd64.AppImage
      - name: upload apks
        uses: actions/upload-artifact@v4
        if: ${{ matrix.android }}
        with:
          name: Android APKs
          path: ${{ github.workspace }}/src-tauri/gen/android/app/build/outputs/apk/**/**/*.apk
            
      - uses: tauri-apps/tauri-action@v0
        if: matrix.platform != 'ubuntu-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: 'v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: true
          args: ${{ matrix.args }}
